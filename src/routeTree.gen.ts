/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as PointsIndexRouteImport } from './routes/points/index'
import { Route as MembersIndexRouteImport } from './routes/members/index'
import { Route as ChallengesIndexRouteImport } from './routes/challenges/index'
import { Route as ProductsCreateRouteImport } from './routes/products/create'
import { Route as PostsUpsertRouteImport } from './routes/posts/upsert'
import { Route as ChallengesCreateRouteImport } from './routes/challenges/create'
import { Route as ProductsOrdersIndexRouteImport } from './routes/products/orders/index'
import { Route as ProductsIdIndexRouteImport } from './routes/products/$id/index'
import { Route as PointsIdIndexRouteImport } from './routes/points/$id/index'
import { Route as MembersWithdrawnIndexRouteImport } from './routes/members/withdrawn/index'
import { Route as ChallengesIdIndexRouteImport } from './routes/challenges/$id/index'
import { Route as ProductsIdUpdateRouteImport } from './routes/products/$id/update'
import { Route as ChallengesTypeTeamRouteImport } from './routes/challenges/type/team'
import { Route as ChallengesTypeIndividualRouteImport } from './routes/challenges/type/individual'
import { Route as ChallengesIdUpdateRouteImport } from './routes/challenges/$id/update'
import { Route as ChallengesIdTeamsRouteImport } from './routes/challenges/$id/teams'
import { Route as ChallengesManagementVerifyStatusTeamRouteImport } from './routes/challenges/management/verify-status/team'
import { Route as ChallengesManagementVerifyStatusIndividualRouteImport } from './routes/challenges/management/verify-status/individual'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const PointsIndexRoute = PointsIndexRouteImport.update({
  id: '/points/',
  path: '/points/',
  getParentRoute: () => rootRouteImport,
} as any)
const MembersIndexRoute = MembersIndexRouteImport.update({
  id: '/members/',
  path: '/members/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesIndexRoute = ChallengesIndexRouteImport.update({
  id: '/challenges/',
  path: '/challenges/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsCreateRoute = ProductsCreateRouteImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsUpsertRoute = PostsUpsertRouteImport.update({
  id: '/posts/upsert',
  path: '/posts/upsert',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesCreateRoute = ChallengesCreateRouteImport.update({
  id: '/challenges/create',
  path: '/challenges/create',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsOrdersIndexRoute = ProductsOrdersIndexRouteImport.update({
  id: '/products/orders/',
  path: '/products/orders/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIdIndexRoute = ProductsIdIndexRouteImport.update({
  id: '/products/$id/',
  path: '/products/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const PointsIdIndexRoute = PointsIdIndexRouteImport.update({
  id: '/points/$id/',
  path: '/points/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const MembersWithdrawnIndexRoute = MembersWithdrawnIndexRouteImport.update({
  id: '/members/withdrawn/',
  path: '/members/withdrawn/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesIdIndexRoute = ChallengesIdIndexRouteImport.update({
  id: '/challenges/$id/',
  path: '/challenges/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIdUpdateRoute = ProductsIdUpdateRouteImport.update({
  id: '/products/$id/update',
  path: '/products/$id/update',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesTypeTeamRoute = ChallengesTypeTeamRouteImport.update({
  id: '/challenges/type/team',
  path: '/challenges/type/team',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesTypeIndividualRoute =
  ChallengesTypeIndividualRouteImport.update({
    id: '/challenges/type/individual',
    path: '/challenges/type/individual',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesIdUpdateRoute = ChallengesIdUpdateRouteImport.update({
  id: '/challenges/$id/update',
  path: '/challenges/$id/update',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesIdTeamsRoute = ChallengesIdTeamsRouteImport.update({
  id: '/challenges/$id/teams',
  path: '/challenges/$id/teams',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesManagementVerifyStatusTeamRoute =
  ChallengesManagementVerifyStatusTeamRouteImport.update({
    id: '/challenges/management/verify-status/team',
    path: '/challenges/management/verify-status/team',
    getParentRoute: () => rootRouteImport,
  } as any)
const ChallengesManagementVerifyStatusIndividualRoute =
  ChallengesManagementVerifyStatusIndividualRouteImport.update({
    id: '/challenges/management/verify-status/individual',
    path: '/challenges/management/verify-status/individual',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/challenges/create': typeof ChallengesCreateRoute
  '/posts/upsert': typeof PostsUpsertRoute
  '/products/create': typeof ProductsCreateRoute
  '/challenges': typeof ChallengesIndexRoute
  '/members': typeof MembersIndexRoute
  '/points': typeof PointsIndexRoute
  '/posts': typeof PostsIndexRoute
  '/products': typeof ProductsIndexRoute
  '/challenges/$id/teams': typeof ChallengesIdTeamsRoute
  '/challenges/$id/update': typeof ChallengesIdUpdateRoute
  '/challenges/type/individual': typeof ChallengesTypeIndividualRoute
  '/challenges/type/team': typeof ChallengesTypeTeamRoute
  '/products/$id/update': typeof ProductsIdUpdateRoute
  '/challenges/$id': typeof ChallengesIdIndexRoute
  '/members/withdrawn': typeof MembersWithdrawnIndexRoute
  '/points/$id': typeof PointsIdIndexRoute
  '/products/$id': typeof ProductsIdIndexRoute
  '/products/orders': typeof ProductsOrdersIndexRoute
  '/challenges/management/verify-status/individual': typeof ChallengesManagementVerifyStatusIndividualRoute
  '/challenges/management/verify-status/team': typeof ChallengesManagementVerifyStatusTeamRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/challenges/create': typeof ChallengesCreateRoute
  '/posts/upsert': typeof PostsUpsertRoute
  '/products/create': typeof ProductsCreateRoute
  '/challenges': typeof ChallengesIndexRoute
  '/members': typeof MembersIndexRoute
  '/points': typeof PointsIndexRoute
  '/posts': typeof PostsIndexRoute
  '/products': typeof ProductsIndexRoute
  '/challenges/$id/teams': typeof ChallengesIdTeamsRoute
  '/challenges/$id/update': typeof ChallengesIdUpdateRoute
  '/challenges/type/individual': typeof ChallengesTypeIndividualRoute
  '/challenges/type/team': typeof ChallengesTypeTeamRoute
  '/products/$id/update': typeof ProductsIdUpdateRoute
  '/challenges/$id': typeof ChallengesIdIndexRoute
  '/members/withdrawn': typeof MembersWithdrawnIndexRoute
  '/points/$id': typeof PointsIdIndexRoute
  '/products/$id': typeof ProductsIdIndexRoute
  '/products/orders': typeof ProductsOrdersIndexRoute
  '/challenges/management/verify-status/individual': typeof ChallengesManagementVerifyStatusIndividualRoute
  '/challenges/management/verify-status/team': typeof ChallengesManagementVerifyStatusTeamRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/challenges/create': typeof ChallengesCreateRoute
  '/posts/upsert': typeof PostsUpsertRoute
  '/products/create': typeof ProductsCreateRoute
  '/challenges/': typeof ChallengesIndexRoute
  '/members/': typeof MembersIndexRoute
  '/points/': typeof PointsIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/challenges/$id/teams': typeof ChallengesIdTeamsRoute
  '/challenges/$id/update': typeof ChallengesIdUpdateRoute
  '/challenges/type/individual': typeof ChallengesTypeIndividualRoute
  '/challenges/type/team': typeof ChallengesTypeTeamRoute
  '/products/$id/update': typeof ProductsIdUpdateRoute
  '/challenges/$id/': typeof ChallengesIdIndexRoute
  '/members/withdrawn/': typeof MembersWithdrawnIndexRoute
  '/points/$id/': typeof PointsIdIndexRoute
  '/products/$id/': typeof ProductsIdIndexRoute
  '/products/orders/': typeof ProductsOrdersIndexRoute
  '/challenges/management/verify-status/individual': typeof ChallengesManagementVerifyStatusIndividualRoute
  '/challenges/management/verify-status/team': typeof ChallengesManagementVerifyStatusTeamRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/challenges/create'
    | '/posts/upsert'
    | '/products/create'
    | '/challenges'
    | '/members'
    | '/points'
    | '/posts'
    | '/products'
    | '/challenges/$id/teams'
    | '/challenges/$id/update'
    | '/challenges/type/individual'
    | '/challenges/type/team'
    | '/products/$id/update'
    | '/challenges/$id'
    | '/members/withdrawn'
    | '/points/$id'
    | '/products/$id'
    | '/products/orders'
    | '/challenges/management/verify-status/individual'
    | '/challenges/management/verify-status/team'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/challenges/create'
    | '/posts/upsert'
    | '/products/create'
    | '/challenges'
    | '/members'
    | '/points'
    | '/posts'
    | '/products'
    | '/challenges/$id/teams'
    | '/challenges/$id/update'
    | '/challenges/type/individual'
    | '/challenges/type/team'
    | '/products/$id/update'
    | '/challenges/$id'
    | '/members/withdrawn'
    | '/points/$id'
    | '/products/$id'
    | '/products/orders'
    | '/challenges/management/verify-status/individual'
    | '/challenges/management/verify-status/team'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/challenges/create'
    | '/posts/upsert'
    | '/products/create'
    | '/challenges/'
    | '/members/'
    | '/points/'
    | '/posts/'
    | '/products/'
    | '/challenges/$id/teams'
    | '/challenges/$id/update'
    | '/challenges/type/individual'
    | '/challenges/type/team'
    | '/products/$id/update'
    | '/challenges/$id/'
    | '/members/withdrawn/'
    | '/points/$id/'
    | '/products/$id/'
    | '/products/orders/'
    | '/challenges/management/verify-status/individual'
    | '/challenges/management/verify-status/team'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  ChallengesCreateRoute: typeof ChallengesCreateRoute
  PostsUpsertRoute: typeof PostsUpsertRoute
  ProductsCreateRoute: typeof ProductsCreateRoute
  ChallengesIndexRoute: typeof ChallengesIndexRoute
  MembersIndexRoute: typeof MembersIndexRoute
  PointsIndexRoute: typeof PointsIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  ChallengesIdTeamsRoute: typeof ChallengesIdTeamsRoute
  ChallengesIdUpdateRoute: typeof ChallengesIdUpdateRoute
  ChallengesTypeIndividualRoute: typeof ChallengesTypeIndividualRoute
  ChallengesTypeTeamRoute: typeof ChallengesTypeTeamRoute
  ProductsIdUpdateRoute: typeof ProductsIdUpdateRoute
  ChallengesIdIndexRoute: typeof ChallengesIdIndexRoute
  MembersWithdrawnIndexRoute: typeof MembersWithdrawnIndexRoute
  PointsIdIndexRoute: typeof PointsIdIndexRoute
  ProductsIdIndexRoute: typeof ProductsIdIndexRoute
  ProductsOrdersIndexRoute: typeof ProductsOrdersIndexRoute
  ChallengesManagementVerifyStatusIndividualRoute: typeof ChallengesManagementVerifyStatusIndividualRoute
  ChallengesManagementVerifyStatusTeamRoute: typeof ChallengesManagementVerifyStatusTeamRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/points/': {
      id: '/points/'
      path: '/points'
      fullPath: '/points'
      preLoaderRoute: typeof PointsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/members/': {
      id: '/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof MembersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/': {
      id: '/challenges/'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof ChallengesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/create': {
      id: '/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof ProductsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/upsert': {
      id: '/posts/upsert'
      path: '/posts/upsert'
      fullPath: '/posts/upsert'
      preLoaderRoute: typeof PostsUpsertRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/create': {
      id: '/challenges/create'
      path: '/challenges/create'
      fullPath: '/challenges/create'
      preLoaderRoute: typeof ChallengesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/orders/': {
      id: '/products/orders/'
      path: '/products/orders'
      fullPath: '/products/orders'
      preLoaderRoute: typeof ProductsOrdersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$id/': {
      id: '/products/$id/'
      path: '/products/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof ProductsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/points/$id/': {
      id: '/points/$id/'
      path: '/points/$id'
      fullPath: '/points/$id'
      preLoaderRoute: typeof PointsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/members/withdrawn/': {
      id: '/members/withdrawn/'
      path: '/members/withdrawn'
      fullPath: '/members/withdrawn'
      preLoaderRoute: typeof MembersWithdrawnIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$id/': {
      id: '/challenges/$id/'
      path: '/challenges/$id'
      fullPath: '/challenges/$id'
      preLoaderRoute: typeof ChallengesIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$id/update': {
      id: '/products/$id/update'
      path: '/products/$id/update'
      fullPath: '/products/$id/update'
      preLoaderRoute: typeof ProductsIdUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/type/team': {
      id: '/challenges/type/team'
      path: '/challenges/type/team'
      fullPath: '/challenges/type/team'
      preLoaderRoute: typeof ChallengesTypeTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/type/individual': {
      id: '/challenges/type/individual'
      path: '/challenges/type/individual'
      fullPath: '/challenges/type/individual'
      preLoaderRoute: typeof ChallengesTypeIndividualRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$id/update': {
      id: '/challenges/$id/update'
      path: '/challenges/$id/update'
      fullPath: '/challenges/$id/update'
      preLoaderRoute: typeof ChallengesIdUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$id/teams': {
      id: '/challenges/$id/teams'
      path: '/challenges/$id/teams'
      fullPath: '/challenges/$id/teams'
      preLoaderRoute: typeof ChallengesIdTeamsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/management/verify-status/team': {
      id: '/challenges/management/verify-status/team'
      path: '/challenges/management/verify-status/team'
      fullPath: '/challenges/management/verify-status/team'
      preLoaderRoute: typeof ChallengesManagementVerifyStatusTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/management/verify-status/individual': {
      id: '/challenges/management/verify-status/individual'
      path: '/challenges/management/verify-status/individual'
      fullPath: '/challenges/management/verify-status/individual'
      preLoaderRoute: typeof ChallengesManagementVerifyStatusIndividualRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  ChallengesCreateRoute: ChallengesCreateRoute,
  PostsUpsertRoute: PostsUpsertRoute,
  ProductsCreateRoute: ProductsCreateRoute,
  ChallengesIndexRoute: ChallengesIndexRoute,
  MembersIndexRoute: MembersIndexRoute,
  PointsIndexRoute: PointsIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  ChallengesIdTeamsRoute: ChallengesIdTeamsRoute,
  ChallengesIdUpdateRoute: ChallengesIdUpdateRoute,
  ChallengesTypeIndividualRoute: ChallengesTypeIndividualRoute,
  ChallengesTypeTeamRoute: ChallengesTypeTeamRoute,
  ProductsIdUpdateRoute: ProductsIdUpdateRoute,
  ChallengesIdIndexRoute: ChallengesIdIndexRoute,
  MembersWithdrawnIndexRoute: MembersWithdrawnIndexRoute,
  PointsIdIndexRoute: PointsIdIndexRoute,
  ProductsIdIndexRoute: ProductsIdIndexRoute,
  ProductsOrdersIndexRoute: ProductsOrdersIndexRoute,
  ChallengesManagementVerifyStatusIndividualRoute:
    ChallengesManagementVerifyStatusIndividualRoute,
  ChallengesManagementVerifyStatusTeamRoute:
    ChallengesManagementVerifyStatusTeamRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
